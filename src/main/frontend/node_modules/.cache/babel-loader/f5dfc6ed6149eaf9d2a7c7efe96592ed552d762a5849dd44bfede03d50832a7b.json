{"ast":null,"code":"import{useDispatch,useSelector}from\"react-redux\";import{closeModal,getStackSize,openModal,lock,unlock,closeAndLock}from\"../store/slices/modalSlice\";import{ModalType}from\"../modal/ModalType\";function useModal(){const dispatch=useDispatch();const handleOpenModal=(modalName,props)=>{const type=ModalType.getType(modalName);dispatch(openModal({modalName,type,props}));};const handleCloseModal=modalName=>{dispatch(closeModal(modalName));};const handleOpenRenderlessModal=(modalName,onopen,onclose,props)=>{dispatch(openModal({modalName,type:'RENDERLESS',onopen,onclose,props}));};const hasModal=()=>{return getStackSize();};const lockModal=modalName=>{dispatch(lock(modalName));};const unlockModal=()=>{dispatch(unlock());};const closeAndLockModal=modalName=>{dispatch(closeAndLock(modalName));};return{openModal:handleOpenModal,closeModal:handleCloseModal,openRenderlessModal:handleOpenRenderlessModal,hasModal,lockModal,unlockModal,closeAndLockModal};}export default useModal;","map":{"version":3,"names":["useDispatch","useSelector","closeModal","getStackSize","openModal","lock","unlock","closeAndLock","ModalType","useModal","dispatch","handleOpenModal","modalName","props","type","getType","handleCloseModal","handleOpenRenderlessModal","onopen","onclose","hasModal","lockModal","unlockModal","closeAndLockModal","openRenderlessModal"],"sources":["/Users/chan/Baektracker/src/main/frontend/src/js/setup/hook/useModal.js"],"sourcesContent":["import {useDispatch, useSelector} from \"react-redux\";\nimport {closeModal, getStackSize, openModal, lock, unlock, closeAndLock} from \"../store/slices/modalSlice\";\nimport {ModalType} from \"../modal/ModalType\";\n\nfunction useModal(){\n    const dispatch = useDispatch();\n\n    const handleOpenModal = (modalName, props)=>{\n        const type = ModalType.getType(modalName);\n        dispatch(openModal({modalName, type, props}));\n    }\n\n    const handleCloseModal = (modalName)=>{\n        dispatch(closeModal(modalName));\n    }\n\n    const handleOpenRenderlessModal = (modalName, onopen, onclose, props)=>{\n        dispatch(openModal({modalName, type: 'RENDERLESS', onopen, onclose, props}));\n    }\n\n    const hasModal = ()=>{\n        return getStackSize();\n    }\n\n    const lockModal = (modalName)=>{\n        dispatch(lock(modalName))\n    }\n    const unlockModal = ()=>{\n        dispatch(unlock())\n    }\n    const closeAndLockModal = (modalName)=>{\n        dispatch(closeAndLock(modalName))\n    }\n\n    return {\n        openModal: handleOpenModal,\n        closeModal: handleCloseModal,\n        openRenderlessModal: handleOpenRenderlessModal,\n        hasModal,\n        lockModal,\n        unlockModal,\n        closeAndLockModal\n    }\n}\n\nexport default useModal;"],"mappings":"AAAA,OAAQA,WAAW,CAAEC,WAAW,KAAO,aAAa,CACpD,OAAQC,UAAU,CAAEC,YAAY,CAAEC,SAAS,CAAEC,IAAI,CAAEC,MAAM,CAAEC,YAAY,KAAO,4BAA4B,CAC1G,OAAQC,SAAS,KAAO,oBAAoB,CAE5C,QAAS,CAAAC,QAAQA,CAAA,CAAE,CACf,KAAM,CAAAC,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAW,eAAe,CAAGA,CAACC,SAAS,CAAEC,KAAK,GAAG,CACxC,KAAM,CAAAC,IAAI,CAAGN,SAAS,CAACO,OAAO,CAACH,SAAS,CAAC,CACzCF,QAAQ,CAACN,SAAS,CAAC,CAACQ,SAAS,CAAEE,IAAI,CAAED,KAAK,CAAC,CAAC,CAAC,CACjD,CAAC,CAED,KAAM,CAAAG,gBAAgB,CAAIJ,SAAS,EAAG,CAClCF,QAAQ,CAACR,UAAU,CAACU,SAAS,CAAC,CAAC,CACnC,CAAC,CAED,KAAM,CAAAK,yBAAyB,CAAGA,CAACL,SAAS,CAAEM,MAAM,CAAEC,OAAO,CAAEN,KAAK,GAAG,CACnEH,QAAQ,CAACN,SAAS,CAAC,CAACQ,SAAS,CAAEE,IAAI,CAAE,YAAY,CAAEI,MAAM,CAAEC,OAAO,CAAEN,KAAK,CAAC,CAAC,CAAC,CAChF,CAAC,CAED,KAAM,CAAAO,QAAQ,CAAGA,CAAA,GAAI,CACjB,MAAO,CAAAjB,YAAY,CAAC,CAAC,CACzB,CAAC,CAED,KAAM,CAAAkB,SAAS,CAAIT,SAAS,EAAG,CAC3BF,QAAQ,CAACL,IAAI,CAACO,SAAS,CAAC,CAAC,CAC7B,CAAC,CACD,KAAM,CAAAU,WAAW,CAAGA,CAAA,GAAI,CACpBZ,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,CACtB,CAAC,CACD,KAAM,CAAAiB,iBAAiB,CAAIX,SAAS,EAAG,CACnCF,QAAQ,CAACH,YAAY,CAACK,SAAS,CAAC,CAAC,CACrC,CAAC,CAED,MAAO,CACHR,SAAS,CAAEO,eAAe,CAC1BT,UAAU,CAAEc,gBAAgB,CAC5BQ,mBAAmB,CAAEP,yBAAyB,CAC9CG,QAAQ,CACRC,SAAS,CACTC,WAAW,CACXC,iBACJ,CAAC,CACL,CAEA,cAAe,CAAAd,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}