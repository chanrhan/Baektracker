{"ast":null,"code":"import styles from\"../../css/styles.module.css\";import React,{useEffect,useState}from\"react\";import useModal from\"../setup/hook/useModal\";import{ModalType}from\"../setup/modal/ModalType\";import{DesignUtils}from\"../utils/DesignUtils\";import{cm}from\"../setup/utils/cm\";import{useApi}from\"../api/useApi\";// WeeklyProblems 컴포넌트\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export function WeekProblems(_ref){let{fromDate,toDate}=_ref;const{problemApi}=useApi();const modal=useModal();const[weeklyProblems,setWeeklyProblems]=useState([]);const[weeklyProblemInputs,setWeeklyProblemInputs]=useState([-1,-1,-1]);useEffect(()=>{getWeeklyProblems();},[fromDate,toDate]);const getWeeklyProblems=()=>{problemApi.getWeeklyProblem(fromDate).then(_ref2=>{let{status,data}=_ref2;// console.table(data)\nif(data){const copy=[...weeklyProblemInputs];for(const i in data){copy[i]=data[i].problem_id;}setWeeklyProblemInputs(copy);setWeeklyProblems(data);}});};const openWeeklyProblemModal=()=>{modal.openModal(ModalType.LAYER.WeeklyProblemDetail,{problems:weeklyProblems,fromDate:fromDate,toDate:toDate,onSubmit:()=>{getWeeklyProblems();}});};const getSolverStatus=solverCount=>{if(solverCount===7){return{text:\"모두가 풀었습니다!!\",className:styles.weeklyProblemsAllSolved};}if(solverCount===0){return{text:\"아무도 풀지 않았습니다..\",className:styles.weeklyProblemsNoneSolved};}return{text:\"\".concat(solverCount,\"\\uBA85\\uC774 \\uD480\\uC5C8\\uC2B5\\uB2C8\\uB2E4\"),className:styles.weeklyProblemsPartialSolved};};return/*#__PURE__*/_jsxs(\"section\",{className:styles.problemsSection,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.problemsHeader,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.sectionTitle,children:\"\\uC8FC\\uAC04 \\uBB38\\uC81C\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.addButton,onClick:openWeeklyProblemModal,children:\"\\uBB38\\uC81C \\uCD9C\\uC81C\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.weeklyProblemsContainer,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.weeklyProblemsGrid,children:[weeklyProblems&&weeklyProblems.map(problem=>{const status=getSolverStatus(problem===null||problem===void 0?void 0:problem.solved_cnt);return/*#__PURE__*/_jsxs(\"div\",{className:styles.weeklyProblemsCard,onClick:()=>{window.open(\"https://www.acmicpc.net/problem/\".concat(problem.problem_id),\"_blank\");},children:[/*#__PURE__*/_jsx(\"div\",{className:styles.weeklyProblemsAccentBar,style:{backgroundColor:DesignUtils.getTierColor(problem.level)}}),/*#__PURE__*/_jsx(\"div\",{className:styles.weeklyProblemsHeader,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.weeklyProblemsInfo,children:[/*#__PURE__*/_jsx(\"span\",{className:cm(styles.tierIcon,\"\".concat(DesignUtils.getTierIconClass(problem.level)))}),/*#__PURE__*/_jsxs(\"h3\",{className:styles.weeklyProblemsTitle,children:[\"# \",problem.problem_id,\" \",problem.title]})]})}),/*#__PURE__*/_jsx(\"div\",{className:styles.weeklyProblemsSolverStatus,children:/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(styles.weeklyProblemsStatusBadge,\" \").concat(status.className),children:status.text})})]},problem.id);}),weeklyProblems&&weeklyProblems.length<3&&/*#__PURE__*/_jsx(_Fragment,{children:Array.from({length:3-weeklyProblems.length}).map((_,index)=>/*#__PURE__*/_jsx(\"div\",{className:styles.weeklyProblemsEmptySlot,onClick:()=>{openWeeklyProblemModal();},children:/*#__PURE__*/_jsx(\"span\",{className:styles.weeklyProblemsEmptyText,children:\"\\uBB38\\uC81C\\uB97C \\uCD9C\\uC81C\\uD574\\uC8FC\\uC138\\uC694\"})},index))})]})})]});}","map":{"version":3,"names":["styles","React","useEffect","useState","useModal","ModalType","DesignUtils","cm","useApi","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","WeekProblems","_ref","fromDate","toDate","problemApi","modal","weeklyProblems","setWeeklyProblems","weeklyProblemInputs","setWeeklyProblemInputs","getWeeklyProblems","getWeeklyProblem","then","_ref2","status","data","copy","i","problem_id","openWeeklyProblemModal","openModal","LAYER","WeeklyProblemDetail","problems","onSubmit","getSolverStatus","solverCount","text","className","weeklyProblemsAllSolved","weeklyProblemsNoneSolved","concat","weeklyProblemsPartialSolved","problemsSection","children","problemsHeader","sectionTitle","addButton","onClick","weeklyProblemsContainer","weeklyProblemsGrid","map","problem","solved_cnt","weeklyProblemsCard","window","open","weeklyProblemsAccentBar","style","backgroundColor","getTierColor","level","weeklyProblemsHeader","weeklyProblemsInfo","tierIcon","getTierIconClass","weeklyProblemsTitle","title","weeklyProblemsSolverStatus","weeklyProblemsStatusBadge","id","length","Array","from","_","index","weeklyProblemsEmptySlot","weeklyProblemsEmptyText"],"sources":["/Users/chan/Baektracker/src/main/frontend/src/js/components/WeekProblems.jsx"],"sourcesContent":["import styles from \"../../css/styles.module.css\";\nimport React, {useEffect, useState} from \"react\";\nimport useModal from \"../setup/hook/useModal\";\nimport {ModalType} from \"../setup/modal/ModalType\";\nimport {DesignUtils} from \"../utils/DesignUtils\";\nimport {cm} from \"../setup/utils/cm\";\nimport {useApi} from \"../api/useApi\";\n// WeeklyProblems 컴포넌트\n\nexport function WeekProblems({fromDate, toDate}){\n    const {problemApi} = useApi();\n    const modal = useModal();\n\n    const [weeklyProblems, setWeeklyProblems] = useState([]);\n\n    const [weeklyProblemInputs, setWeeklyProblemInputs] = useState([-1, -1, -1])\n\n    useEffect(() => {\n        getWeeklyProblems();\n    }, [fromDate, toDate]);\n\n    const getWeeklyProblems = ()=>{\n        problemApi.getWeeklyProblem(fromDate).then(({status,data})=>{\n            // console.table(data)\n            if(data){\n                const copy = [...weeklyProblemInputs];\n                for(const i in data){\n                    copy[i] = data[i].problem_id\n                }\n                setWeeklyProblemInputs(copy);\n                setWeeklyProblems(data);\n            }\n        })\n    }\n\n    const openWeeklyProblemModal = ()=>{\n        modal.openModal(ModalType.LAYER.WeeklyProblemDetail, {\n            problems: weeklyProblems,\n            fromDate: fromDate,\n            toDate: toDate,\n            onSubmit: ()=>{\n                getWeeklyProblems()\n            }\n        })\n    }\n\n    const getSolverStatus = (solverCount) => {\n        if (solverCount === 7) {\n            return { text: \"모두가 풀었습니다!!\", className: styles.weeklyProblemsAllSolved }\n        }\n        if (solverCount === 0) {\n            return { text: \"아무도 풀지 않았습니다..\", className: styles.weeklyProblemsNoneSolved }\n        }\n        return { text: `${solverCount}명이 풀었습니다`, className: styles.weeklyProblemsPartialSolved }\n    }\n\n    return (\n        <section className={styles.problemsSection}>\n            <div className={styles.problemsHeader}>\n                <div className={styles.sectionTitle}>주간 문제</div>\n                <button className={styles.addButton} onClick={openWeeklyProblemModal}>\n                    문제 출제\n                </button>\n            </div>\n            <div className={styles.weeklyProblemsContainer}>\n                <div className={styles.weeklyProblemsGrid}>\n                    {weeklyProblems && weeklyProblems.map((problem) => {\n                        const status = getSolverStatus(problem?.solved_cnt)\n\n                        return (\n                            <div key={problem.id} className={styles.weeklyProblemsCard} onClick={()=>{\n                                window.open(`https://www.acmicpc.net/problem/${problem.problem_id}`, \"_blank\")\n                            }}>\n                                <div\n                                    className={styles.weeklyProblemsAccentBar}\n                                    style={{backgroundColor: DesignUtils.getTierColor(problem.level)}}\n                                />\n                                <div className={styles.weeklyProblemsHeader}>\n                                    <div className={styles.weeklyProblemsInfo}>\n                                        <span className={cm(styles.tierIcon, `${DesignUtils.getTierIconClass(problem.level)}`)}></span>\n                                        {/*<TierIcon tier={problem.level} size=\"small\" showText={true}/>*/}\n                                        <h3 className={styles.weeklyProblemsTitle}>\n                                            # {problem.problem_id} {problem.title}\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <div className={styles.weeklyProblemsSolverStatus}>\n                                    <span className={`${styles.weeklyProblemsStatusBadge} ${status.className}`}>\n                                      {status.text}\n                                    </span>\n                                </div>\n                            </div>\n                        )\n                    })}\n\n                    {weeklyProblems && weeklyProblems.length < 3 && (\n                        <>\n                            {Array.from({length: 3 - weeklyProblems.length}).map((_, index) => (\n                                <div key={index} className={styles.weeklyProblemsEmptySlot} onClick={()=>{\n                                    openWeeklyProblemModal()\n                                }}>\n                                    <span className={styles.weeklyProblemsEmptyText}>문제를 출제해주세요</span>\n                                </div>\n                            ))}\n                        </>\n                    )}\n                </div>\n            </div>\n        </section>\n\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}