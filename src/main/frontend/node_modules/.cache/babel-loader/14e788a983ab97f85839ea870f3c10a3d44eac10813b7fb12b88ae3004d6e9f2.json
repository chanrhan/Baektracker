{"ast":null,"code":"import axiosInstance from\"./axiosInstance\";import useModal from\"../hook/useModal\";import{ModalType}from\"../modal/ModalType\";// import {authActions} from \"../store/slices/authSlice\";\n// import {useSelector} from \"react-redux\";\nexport const AxiosApi=()=>{const modal=useModal();// const {authenticated, accessToken, expireTime} = useSelector(s=>s.authReducer);\naxiosInstance.interceptors.response.use(response=>{return{status:response.status,data:response.data,headers:response.headers};},error=>{if(!error){return error.response;}const status=error.response.status;if(status>=300){var _msg;let msg=\"문제가 발생했습니다. 다시 한번 시도해 주세요.\";if(error.code==='ERR_NETWORK'){msg='서버 연결이 원활하지 않습니다. 잠시 후 다시 시도해주세요.';}else if(error.response&&error.response.data){msg=error.response.data.message;}modal.openModal(ModalType.SNACKBAR.Warn,{msg:(_msg=msg)!==null&&_msg!==void 0?_msg:\"문제가 발생했습니다. 다시 한번 시도해 주세요.\"});}// throw msg;\nreturn{status:status,data:error.response.data};});const post=async(url,data,option)=>{return await axiosInstance.post(url,data,option);};const get=async(url,option)=>{return await axiosInstance.get(url,option);};const del=async(url,option)=>{return await axiosInstance.delete(url,option);};const put=async(url,data,option)=>{return await axiosInstance.put(url,data,option);};return{post,get,del,put};};export const AxiosApiWithAccessToken=()=>{const axiosApi=AxiosApi();const post=async(url,data,accessToken)=>{return axiosApi.post(url,data,{headers:{\"X-ACCESS-TOKEN\":accessToken}});};const get=(url,accessToken)=>{return axiosApi.get(url,{headers:{\"X-ACCESS-TOKEN\":accessToken}});};const del=async(url,accessToken,data)=>{return axiosApi.delete(url,{data:data,headers:{\"X-ACCESS-TOKEN\":accessToken}});};const put=async(url,data,accessToken)=>{return axiosApi.put(url,data,{headers:{\"X-ACCESS-TOKEN\":accessToken}});};return{post,get,del,put};};","map":{"version":3,"names":["axiosInstance","useModal","ModalType","AxiosApi","modal","interceptors","response","use","status","data","headers","error","_msg","msg","code","message","openModal","SNACKBAR","Warn","post","url","option","get","del","delete","put","AxiosApiWithAccessToken","axiosApi","accessToken"],"sources":["/Users/chan/Baektracker/src/main/frontend/src/js/setup/api/ApiCommon.js"],"sourcesContent":["import axiosInstance from \"./axiosInstance\";\nimport useModal from \"../hook/useModal\";\nimport {ModalType} from \"../modal/ModalType\";\n// import {authActions} from \"../store/slices/authSlice\";\n// import {useSelector} from \"react-redux\";\n\nexport const AxiosApi = ()=> {\n    const modal = useModal();\n    // const {authenticated, accessToken, expireTime} = useSelector(s=>s.authReducer);\n\n    axiosInstance.interceptors.response.use((response)=>{\n        return {\n            status: response.status,\n            data: response.data,\n            headers: response.headers\n        }\n    }, (error)=>{\n        if(!error){\n            return error.response;\n        }\n        const status = error.response.status;\n        if(status >= 300){\n            let msg = \"문제가 발생했습니다. 다시 한번 시도해 주세요.\";\n            if(error.code === 'ERR_NETWORK'){\n                msg =  '서버 연결이 원활하지 않습니다. 잠시 후 다시 시도해주세요.'\n            }else if(error.response && error.response.data){\n                msg = error.response.data.message;\n            }\n            modal.openModal(ModalType.SNACKBAR.Warn, {\n                msg: msg ?? \"문제가 발생했습니다. 다시 한번 시도해 주세요.\"\n            })\n        }\n\n        // throw msg;\n        return  {\n            status: status,\n            data: error.response.data\n        }\n    })\n\n    const post = async(url, data, option)=>{\n        return await axiosInstance.post(url, data, option);\n    }\n\n    const get = async(url, option)=>{\n        return await axiosInstance.get(url, option)\n    }\n\n    const del = async(url, option)=>{\n        return await axiosInstance.delete(url, option);\n    }\n\n    const put = async (url, data, option)=>{\n        return await axiosInstance.put(url, data, option);\n    }\n\n    return {\n        post,\n        get,\n        del,\n        put\n    }\n}\n\nexport const AxiosApiWithAccessToken = ()=> {\n    const axiosApi = AxiosApi();\n\n    const post = async(url, data, accessToken)=>{\n        return axiosApi.post(url,data, {\n            headers: {\n                \"X-ACCESS-TOKEN\": accessToken\n            }\n        });\n    }\n\n\n    const get=(url, accessToken)=>{\n        return axiosApi.get(url, {\n            headers: {\n                \"X-ACCESS-TOKEN\": accessToken\n            }\n        });\n    }\n\n    const del = async(url, accessToken, data)=>{\n        return axiosApi.delete(url, {\n            data: data,\n            headers: {\n                \"X-ACCESS-TOKEN\": accessToken\n            }\n        });\n    }\n\n    const put = async (url, data, accessToken) => {\n        return axiosApi.put(url, data, {\n            headers: {\n                \"X-ACCESS-TOKEN\": accessToken\n            }\n        });\n    }\n\n    return {\n        post,\n        get,\n        del,\n        put,\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}