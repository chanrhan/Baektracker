{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Baektracker/src/main/frontend/src/js/setup/modal/tooltip/TooltipContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../../../../css/styles_old.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tooltipInstance = null;\nexport const TooltipContainer = () => {\n  _s();\n  const [tooltip, setTooltip] = useState({\n    visible: false,\n    content: '',\n    x: 0,\n    y: 0,\n    position: 'top' // top, bottom, left, right\n  });\n  useEffect(() => {\n    // 전역 인스턴스 설정\n    tooltipInstance = {\n      show: (content, x, y, position = 'top') => {\n        setTooltip({\n          visible: true,\n          content,\n          x,\n          y,\n          position\n        });\n      },\n      hide: () => {\n        setTooltip(prev => ({\n          ...prev,\n          visible: false\n        }));\n      }\n    };\n\n    // 전역 함수 등록\n    window.showTooltip = tooltipInstance.show;\n    window.hideTooltip = tooltipInstance.hide;\n    return () => {\n      tooltipInstance = null;\n      delete window.showTooltip;\n      delete window.hideTooltip;\n    };\n  }, []);\n  if (!tooltip.visible) return null;\n  const getTooltipStyle = () => {\n    const offset = 10;\n    let left = tooltip.x;\n    let top = tooltip.y;\n    switch (tooltip.position) {\n      case 'top':\n        top = tooltip.y - offset;\n        left = tooltip.x;\n        break;\n      case 'bottom':\n        top = tooltip.y + offset;\n        left = tooltip.x;\n        break;\n      case 'left':\n        top = tooltip.y;\n        left = tooltip.x - offset;\n        break;\n      case 'right':\n        top = tooltip.y;\n        left = tooltip.x + offset;\n        break;\n    }\n    return {\n      position: 'fixed',\n      left: `${left}px`,\n      top: `${top}px`,\n      zIndex: 9999,\n      transform: 'translate(-50%, -100%)'\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.globalTooltip,\n    style: getTooltipStyle(),\n    children: typeof tooltip.content === 'string' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: tooltip.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this) : tooltip.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n// 전역 함수들\n_s(TooltipContainer, \"WIeLXA8kAR65G6TsjyGqFVUTolM=\");\n_c = TooltipContainer;\nexport const showTooltip = (content, x, y, position = 'top') => {\n  if (tooltipInstance) {\n    tooltipInstance.show(content, x, y, position);\n  }\n};\nexport const hideTooltip = () => {\n  if (tooltipInstance) {\n    tooltipInstance.hide();\n  }\n};\n\n// React Hook\nexport const useTooltip = () => {\n  return {\n    showTooltip: (content, x, y, position = 'top') => {\n      if (tooltipInstance) {\n        tooltipInstance.show(content, x, y, position);\n      }\n    },\n    hideTooltip: () => {\n      if (tooltipInstance) {\n        tooltipInstance.hide();\n      }\n    }\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"TooltipContainer\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","tooltipInstance","TooltipContainer","_s","tooltip","setTooltip","visible","content","x","y","position","show","hide","prev","window","showTooltip","hideTooltip","getTooltipStyle","offset","left","top","zIndex","transform","className","globalTooltip","style","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTooltip","$RefreshReg$"],"sources":["/Users/chan/Baektracker/src/main/frontend/src/js/setup/modal/tooltip/TooltipContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from '../../../../css/styles_old.module.css';\n\nlet tooltipInstance = null;\n\nexport const TooltipContainer = () => {\n    const [tooltip, setTooltip] = useState({\n        visible: false,\n        content: '',\n        x: 0,\n        y: 0,\n        position: 'top' // top, bottom, left, right\n    });\n\n    useEffect(() => {\n        // 전역 인스턴스 설정\n        tooltipInstance = {\n            show: (content, x, y, position = 'top') => {\n                setTooltip({\n                    visible: true,\n                    content,\n                    x,\n                    y,\n                    position\n                });\n            },\n            hide: () => {\n                setTooltip(prev => ({ ...prev, visible: false }));\n            }\n        };\n\n        // 전역 함수 등록\n        window.showTooltip = tooltipInstance.show;\n        window.hideTooltip = tooltipInstance.hide;\n\n        return () => {\n            tooltipInstance = null;\n            delete window.showTooltip;\n            delete window.hideTooltip;\n        };\n    }, []);\n\n    if (!tooltip.visible) return null;\n\n    const getTooltipStyle = () => {\n        const offset = 10;\n        let left = tooltip.x;\n        let top = tooltip.y;\n\n        switch (tooltip.position) {\n            case 'top':\n                top = tooltip.y - offset;\n                left = tooltip.x;\n                break;\n            case 'bottom':\n                top = tooltip.y + offset;\n                left = tooltip.x;\n                break;\n            case 'left':\n                top = tooltip.y;\n                left = tooltip.x - offset;\n                break;\n            case 'right':\n                top = tooltip.y;\n                left = tooltip.x + offset;\n                break;\n        }\n\n        return {\n            position: 'fixed',\n            left: `${left}px`,\n            top: `${top}px`,\n            zIndex: 9999,\n            transform: 'translate(-50%, -100%)'\n        };\n    };\n\n    return (\n        <div className={styles.globalTooltip} style={getTooltipStyle()}>\n            {typeof tooltip.content === 'string' ? \n                <div dangerouslySetInnerHTML={{ __html: tooltip.content }} /> : \n                tooltip.content\n            }\n        </div>\n    );\n};\n\n// 전역 함수들\nexport const showTooltip = (content, x, y, position = 'top') => {\n    if (tooltipInstance) {\n        tooltipInstance.show(content, x, y, position);\n    }\n};\n\nexport const hideTooltip = () => {\n    if (tooltipInstance) {\n        tooltipInstance.hide();\n    }\n};\n\n// React Hook\nexport const useTooltip = () => {\n    return {\n        showTooltip: (content, x, y, position = 'top') => {\n            if (tooltipInstance) {\n                tooltipInstance.show(content, x, y, position);\n            }\n        },\n        hideTooltip: () => {\n            if (tooltipInstance) {\n                tooltipInstance.hide();\n            }\n        }\n    };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}