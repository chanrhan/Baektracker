{"ast":null,"code":"import { AxiosApi } from \"../setup/api/ApiCommon\";\nfunction SolvedAcApi() {\n  const axiosApi = AxiosApi();\n  return {\n    getAllUsers: async date => {\n      return axiosApi.get(`/api/v1/solved-ac/user?date=${date}`);\n    },\n    getWeeklySharedSolved: async date => {\n      return axiosApi.get(`/api/v1/solved-ac/shared-problem/weekly-solved?date=${date}`);\n    },\n    getProblem: async body => {\n      return axiosApi.post(`/api/v1/solved-ac/problem`, body, null);\n    },\n    loadBaekjoon: async () => {\n      return axiosApi.get(`/api/v1/solved-ac/reload`, null);\n    },\n    getSharedProblem: async date => {\n      return axiosApi.get(`/api/v1/solved-ac/shared-problem?date=${date}`, null);\n    },\n    updateSharedProblem: async (date, body) => {\n      return axiosApi.post(`/api/v1/solved-ac/shared-problem?date=${date}`, body, null);\n    },\n    getTotalFine: async () => {\n      return axiosApi.get(`/api/v1/solved-ac/fine/total`, null);\n    },\n    getMonthFine: async date => {\n      return axiosApi.get(`/api/v1/solved-ac/fine/month?date=${date}`, null);\n    },\n    getWeeklyResult: async date => {\n      return axiosApi.get(`/api/v1/solved-ac/fine/week?date=${date}`, null);\n    },\n    getProblemInfoList: async keyword => {\n      return axiosApi.get(`/api/v1/solved-ac/problem/info/list?keyword=${keyword}`, null);\n    },\n    getUsersByProblem: async problemId => {\n      return axiosApi.get(`/api/v1/solved-ac/users/solved?problemId=${problemId}`, null);\n    },\n    getProblemSource: async submitId => {\n      return axiosApi.get(`/api/v1/solved-ac/problem/source?submitId=${submitId}`, null);\n    }\n  };\n}\n_c = SolvedAcApi;\nexport default SolvedAcApi;\nvar _c;\n$RefreshReg$(_c, \"SolvedAcApi\");","map":{"version":3,"names":["AxiosApi","SolvedAcApi","axiosApi","getAllUsers","date","get","getWeeklySharedSolved","getProblem","body","post","loadBaekjoon","getSharedProblem","updateSharedProblem","getTotalFine","getMonthFine","getWeeklyResult","getProblemInfoList","keyword","getUsersByProblem","problemId","getProblemSource","submitId","_c","$RefreshReg$"],"sources":["/Users/chan/Baektracker/src/main/frontend/src/js/api/SolvedAcApi.js"],"sourcesContent":["import {AxiosApi} from \"../setup/api/ApiCommon\";\n\nfunction SolvedAcApi(){\n    const axiosApi = AxiosApi();\n    return {\n        getAllUsers: async (date)=>{\n            return axiosApi.get(`/api/v1/solved-ac/user?date=${date}`);\n        },\n        getWeeklySharedSolved: async (date)=>{\n            return axiosApi.get(`/api/v1/solved-ac/shared-problem/weekly-solved?date=${date}`);\n        },\n        getProblem: async (body)=>{\n            return axiosApi.post(`/api/v1/solved-ac/problem`, body, null);\n        },\n        loadBaekjoon: async ()=>{\n            return axiosApi.get(`/api/v1/solved-ac/reload`, null);\n        },\n        getSharedProblem: async (date)=>{\n            return axiosApi.get(`/api/v1/solved-ac/shared-problem?date=${date}`, null);\n        },\n        updateSharedProblem: async (date, body)=>{\n            return axiosApi.post(`/api/v1/solved-ac/shared-problem?date=${date}`, body, null);\n        },\n        getTotalFine: async ()=>{\n            return axiosApi.get(`/api/v1/solved-ac/fine/total`, null);\n        },\n        getMonthFine: async (date)=>{\n            return axiosApi.get(`/api/v1/solved-ac/fine/month?date=${date}`, null);\n        },\n        getWeeklyResult: async (date)=>{\n            return axiosApi.get(`/api/v1/solved-ac/fine/week?date=${date}`, null);\n        },\n        getProblemInfoList: async (keyword)=>{\n            return axiosApi.get(`/api/v1/solved-ac/problem/info/list?keyword=${keyword}`, null);\n        },\n        getUsersByProblem: async (problemId)=>{\n            return axiosApi.get(`/api/v1/solved-ac/users/solved?problemId=${problemId}`, null);\n        },\n        getProblemSource: async (submitId)=>{\n            return axiosApi.get(`/api/v1/solved-ac/problem/source?submitId=${submitId}`, null);\n        }\n    }\n}\n\nexport default SolvedAcApi;"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,wBAAwB;AAE/C,SAASC,WAAWA,CAAA,EAAE;EAClB,MAAMC,QAAQ,GAAGF,QAAQ,CAAC,CAAC;EAC3B,OAAO;IACHG,WAAW,EAAE,MAAOC,IAAI,IAAG;MACvB,OAAOF,QAAQ,CAACG,GAAG,CAAC,+BAA+BD,IAAI,EAAE,CAAC;IAC9D,CAAC;IACDE,qBAAqB,EAAE,MAAOF,IAAI,IAAG;MACjC,OAAOF,QAAQ,CAACG,GAAG,CAAC,uDAAuDD,IAAI,EAAE,CAAC;IACtF,CAAC;IACDG,UAAU,EAAE,MAAOC,IAAI,IAAG;MACtB,OAAON,QAAQ,CAACO,IAAI,CAAC,2BAA2B,EAAED,IAAI,EAAE,IAAI,CAAC;IACjE,CAAC;IACDE,YAAY,EAAE,MAAAA,CAAA,KAAU;MACpB,OAAOR,QAAQ,CAACG,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAAC;IACzD,CAAC;IACDM,gBAAgB,EAAE,MAAOP,IAAI,IAAG;MAC5B,OAAOF,QAAQ,CAACG,GAAG,CAAC,yCAAyCD,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9E,CAAC;IACDQ,mBAAmB,EAAE,MAAAA,CAAOR,IAAI,EAAEI,IAAI,KAAG;MACrC,OAAON,QAAQ,CAACO,IAAI,CAAC,yCAAyCL,IAAI,EAAE,EAAEI,IAAI,EAAE,IAAI,CAAC;IACrF,CAAC;IACDK,YAAY,EAAE,MAAAA,CAAA,KAAU;MACpB,OAAOX,QAAQ,CAACG,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC;IAC7D,CAAC;IACDS,YAAY,EAAE,MAAOV,IAAI,IAAG;MACxB,OAAOF,QAAQ,CAACG,GAAG,CAAC,qCAAqCD,IAAI,EAAE,EAAE,IAAI,CAAC;IAC1E,CAAC;IACDW,eAAe,EAAE,MAAOX,IAAI,IAAG;MAC3B,OAAOF,QAAQ,CAACG,GAAG,CAAC,oCAAoCD,IAAI,EAAE,EAAE,IAAI,CAAC;IACzE,CAAC;IACDY,kBAAkB,EAAE,MAAOC,OAAO,IAAG;MACjC,OAAOf,QAAQ,CAACG,GAAG,CAAC,+CAA+CY,OAAO,EAAE,EAAE,IAAI,CAAC;IACvF,CAAC;IACDC,iBAAiB,EAAE,MAAOC,SAAS,IAAG;MAClC,OAAOjB,QAAQ,CAACG,GAAG,CAAC,4CAA4Cc,SAAS,EAAE,EAAE,IAAI,CAAC;IACtF,CAAC;IACDC,gBAAgB,EAAE,MAAOC,QAAQ,IAAG;MAChC,OAAOnB,QAAQ,CAACG,GAAG,CAAC,6CAA6CgB,QAAQ,EAAE,EAAE,IAAI,CAAC;IACtF;EACJ,CAAC;AACL;AAACC,EAAA,GAxCQrB,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}