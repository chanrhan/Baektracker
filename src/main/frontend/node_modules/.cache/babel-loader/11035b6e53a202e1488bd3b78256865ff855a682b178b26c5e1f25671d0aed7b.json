{"ast":null,"code":"import styles from \"../../css/styles_old.module.css\";\nexport const DesignUtils = {\n  getTierColor: lv => {\n    if (lv <= 0) {\n      // unrated\n      return '#c1ea84';\n    } else if (lv <= 5) {\n      // bronze\n      return '#704131';\n    } else if (lv > 5 && lv <= 10) {\n      // silver\n      return '#a2a2a2';\n    } else if (lv > 10 && lv <= 15) {\n      // gold\n      return '#ffd116';\n    } else if (lv > 15 && lv <= 20) {\n      // platinum\n      return '#89ffd2';\n    } else if (lv > 20 && lv <= 25) {\n      // diamond\n      return '#548dff';\n    } else if (lv > 25 && lv <= 30) {\n      // ruby\n      return '#ff5f5f';\n    } else {\n      return 'white';\n    }\n  },\n  getTierIconClass: lv => {\n    let tier;\n    let num;\n    if (lv <= 0) {\n      // unrated\n      return styles.unrated;\n    } else if (lv <= 5) {\n      // bronze\n      tier = 'bronze';\n      num = 6 - lv;\n    } else if (lv > 5 && lv <= 10) {\n      // silver\n      tier = 'silver';\n      num = 11 - lv;\n    } else if (lv > 10 && lv <= 15) {\n      // gold\n      tier = 'gold';\n      num = 16 - lv;\n    } else if (lv > 15 && lv <= 20) {\n      // platinum\n      tier = 'platinum';\n      num = 21 - lv;\n    } else if (lv > 20 && lv <= 25) {\n      // diamond\n      tier = 'diamond';\n      num = 26 - lv;\n    } else if (lv > 25 && lv <= 30) {\n      // ruby\n      tier = 'ruby';\n      num = 31 - lv;\n    }\n    const classname = `${tier}_${num}`;\n    return styles[classname];\n  },\n  getBarColor: per => {\n    if (per === 0) {\n      return '#ffffff';\n    } else if (per <= 10) {\n      return '#ff0000';\n    } else if (per > 10 && per <= 50) {\n      return '#ffaa54';\n    } else if (per > 50 && per < 100) {\n      return '#ffd754';\n    } else if (per >= 100) {\n      return '#2986ff';\n    } else {\n      return '#ffffff';\n    }\n  },\n  getResultColor: result => {\n    if (result === 4) {\n      // return '#09d000'\n    } else {\n      return '#ff4a4a';\n    }\n  },\n  getLevelIconClass: lv => {\n    let tier;\n    let num;\n    if (lv <= 0) {\n      // unrated\n      tier = 'sprout';\n      num = 6 - -lv;\n    } else if (lv <= 5) {\n      // bronze\n      tier = 'bronze';\n      num = 6 - lv;\n    } else if (lv > 5 && lv <= 10) {\n      // silver\n      tier = 'silver';\n      num = 11 - lv;\n    } else if (lv > 10 && lv <= 15) {\n      // gold\n      tier = 'gold';\n      num = 16 - lv;\n    } else if (lv > 15 && lv <= 20) {\n      // platinum\n      tier = 'platinum';\n      num = 21 - lv;\n    } else if (lv > 20 && lv <= 25) {\n      // diamond\n      tier = 'diamond';\n      num = 26 - lv;\n    } else if (lv > 25 && lv <= 30) {\n      // ruby\n      tier = 'ruby';\n      num = 31 - lv;\n    }\n    const classname = `${tier}_${num}`;\n    return styles[classname];\n  }\n};","map":{"version":3,"names":["styles","DesignUtils","getTierColor","lv","getTierIconClass","tier","num","unrated","classname","getBarColor","per","getResultColor","result","getLevelIconClass"],"sources":["/Users/chan/Baektracker/src/main/frontend/src/js/utils/DesignUtils.js"],"sourcesContent":["import styles from \"../../css/styles_old.module.css\"\nexport const DesignUtils = {\n    getTierColor : (lv)=>{\n        if(lv <= 0){ // unrated\n            return '#c1ea84';\n        }else if(lv <= 5){ // bronze\n            return '#704131';\n        }else if(lv > 5 && lv <= 10){ // silver\n            return '#a2a2a2';\n        }else if(lv > 10 && lv <= 15){ // gold\n            return '#ffd116';\n        }else if(lv > 15 && lv <= 20){ // platinum\n            return '#89ffd2';\n        }else if(lv > 20 && lv <= 25){ // diamond\n            return '#548dff';\n        }else if(lv > 25 && lv <= 30){ // ruby\n            return '#ff5f5f';\n        }else{\n            return 'white'\n        }\n    },\n    getTierIconClass : (lv)=>{\n        let tier;\n        let num;\n        if(lv <= 0){ // unrated\n            return styles.unrated\n        }else if(lv <= 5){ // bronze\n            tier = 'bronze'\n            num = 6 - lv;\n        }else if(lv > 5 && lv <= 10){ // silver\n            tier = 'silver'\n            num = 11 - lv;\n        }else if(lv > 10 && lv <= 15){ // gold\n            tier = 'gold'\n            num = 16 - lv;\n        }else if(lv > 15 && lv <= 20){ // platinum\n            tier = 'platinum'\n            num = 21 - lv;\n        }else if(lv > 20 && lv <= 25){ // diamond\n            tier = 'diamond'\n            num = 26 - lv;\n        }else if(lv > 25 && lv <= 30){ // ruby\n            tier = 'ruby'\n            num = 31 - lv;\n        }\n        const classname = `${tier}_${num}`;\n        return styles[classname];\n    },\n    getBarColor : (per)=>{\n        if(per === 0){\n            return '#ffffff'\n        }else if(per <= 10){\n            return '#ff0000'\n        }else if(per > 10 && per <= 50){\n            return '#ffaa54'\n        }else if(per > 50 && per < 100){\n            return '#ffd754'\n        }else if(per >= 100){\n            return '#2986ff'\n        }else{\n            return '#ffffff'\n        }\n    },\n    getResultColor : (result)=>{\n        if(result === 4){\n            // return '#09d000'\n        }else{\n            return '#ff4a4a'\n        }\n    },\n    getLevelIconClass : (lv)=>{\n        let tier;\n        let num;\n        if(lv <= 0){ // unrated\n            tier = 'sprout'\n            num = 6 - (-lv);\n        }else if(lv <= 5){ // bronze\n            tier = 'bronze'\n            num = 6 - lv;\n        }else if(lv > 5 && lv <= 10){ // silver\n            tier = 'silver'\n            num = 11 - lv;\n        }else if(lv > 10 && lv <= 15){ // gold\n            tier = 'gold'\n            num = 16 - lv;\n        }else if(lv > 15 && lv <= 20){ // platinum\n            tier = 'platinum'\n            num = 21 - lv;\n        }else if(lv > 20 && lv <= 25){ // diamond\n            tier = 'diamond'\n            num = 26 - lv;\n        }else if(lv > 25 && lv <= 30){ // ruby\n            tier = 'ruby'\n            num = 31 - lv;\n        }\n        const classname = `${tier}_${num}`;\n        return styles[classname];\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}