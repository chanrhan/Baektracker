{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Baektracker/src/main/frontend/src/js/components/TierIcon.jsx\";\nimport styles from \"../../css/styles.module.css\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TierIcon({\n  tier,\n  size,\n  showText\n}) {\n  return null;\n  const getTierInfo = tier => {\n    const tierLower = tier.toLowerCase();\n    if (tierLower.includes(\"bronze\")) {\n      return {\n        color: \"#cd7f32\",\n        bgColor: \"#f4e4bc\",\n        icon: \"ðŸ¥‰\",\n        name: tier\n      };\n    }\n    if (tierLower.includes(\"silver\")) {\n      return {\n        color: \"#c0c0c0\",\n        bgColor: \"#f0f0f0\",\n        icon: \"ðŸ¥ˆ\",\n        name: tier\n      };\n    }\n    if (tierLower.includes(\"gold\")) {\n      return {\n        color: \"#ffd700\",\n        bgColor: \"#fff8dc\",\n        icon: \"ðŸ¥‡\",\n        name: tier\n      };\n    }\n    if (tierLower.includes(\"platinum\")) {\n      return {\n        color: \"#00ff9f\",\n        bgColor: \"#e6fff9\",\n        icon: \"ðŸ’Ž\",\n        name: tier\n      };\n    }\n    if (tierLower.includes(\"diamond\")) {\n      return {\n        color: \"#00bfff\",\n        bgColor: \"#e6f7ff\",\n        icon: \"ðŸ’ \",\n        name: tier\n      };\n    }\n    if (tierLower.includes(\"ruby\")) {\n      return {\n        color: \"#ff0040\",\n        bgColor: \"#ffe6ec\",\n        icon: \"ðŸ”´\",\n        name: tier\n      };\n    }\n    return {\n      color: \"#6b7280\",\n      bgColor: \"#f3f4f6\",\n      icon: \"âšª\",\n      name: tier\n    };\n  };\n  const tierInfo = getTierInfo(tier);\n  const sizeClasses = {\n    small: styles.tierIconSmall,\n    medium: styles.tierIconMedium,\n    large: styles.tierIconLarge\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.tierIconContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${sizeClasses[size]} ${styles.tierIcon}`,\n      style: {\n        backgroundColor: tierInfo.bgColor,\n        color: tierInfo.color,\n        border: `1px solid ${tierInfo.color}40`\n      },\n      children: tierInfo.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), showText && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.tierIconText,\n      style: {\n        color: tierInfo.color\n      },\n      children: tierInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_c = TierIcon;\nvar _c;\n$RefreshReg$(_c, \"TierIcon\");","map":{"version":3,"names":["styles","React","jsxDEV","_jsxDEV","TierIcon","tier","size","showText","getTierInfo","tierLower","toLowerCase","includes","color","bgColor","icon","name","tierInfo","sizeClasses","small","tierIconSmall","medium","tierIconMedium","large","tierIconLarge","className","tierIconContainer","children","tierIcon","style","backgroundColor","border","fileName","_jsxFileName","lineNumber","columnNumber","tierIconText","_c","$RefreshReg$"],"sources":["/Users/chan/Baektracker/src/main/frontend/src/js/components/TierIcon.jsx"],"sourcesContent":["import styles from \"../../css/styles.module.css\";\nimport React from \"react\";\n\nexport function TierIcon({tier, size, showText}){\n    return  null;\n    const getTierInfo = (tier) => {\n        const tierLower = tier.toLowerCase()\n\n        if (tierLower.includes(\"bronze\")) {\n            return {\n                color: \"#cd7f32\",\n                bgColor: \"#f4e4bc\",\n                icon: \"ðŸ¥‰\",\n                name: tier,\n            }\n        }\n        if (tierLower.includes(\"silver\")) {\n            return {\n                color: \"#c0c0c0\",\n                bgColor: \"#f0f0f0\",\n                icon: \"ðŸ¥ˆ\",\n                name: tier,\n            }\n        }\n        if (tierLower.includes(\"gold\")) {\n            return {\n                color: \"#ffd700\",\n                bgColor: \"#fff8dc\",\n                icon: \"ðŸ¥‡\",\n                name: tier,\n            }\n        }\n        if (tierLower.includes(\"platinum\")) {\n            return {\n                color: \"#00ff9f\",\n                bgColor: \"#e6fff9\",\n                icon: \"ðŸ’Ž\",\n                name: tier,\n            }\n        }\n        if (tierLower.includes(\"diamond\")) {\n            return {\n                color: \"#00bfff\",\n                bgColor: \"#e6f7ff\",\n                icon: \"ðŸ’ \",\n                name: tier,\n            }\n        }\n        if (tierLower.includes(\"ruby\")) {\n            return {\n                color: \"#ff0040\",\n                bgColor: \"#ffe6ec\",\n                icon: \"ðŸ”´\",\n                name: tier,\n            }\n        }\n\n        return {\n            color: \"#6b7280\",\n            bgColor: \"#f3f4f6\",\n            icon: \"âšª\",\n            name: tier,\n        }\n    }\n\n    const tierInfo = getTierInfo(tier)\n    const sizeClasses = {\n        small: styles.tierIconSmall,\n        medium: styles.tierIconMedium,\n        large: styles.tierIconLarge,\n    }\n\n    return (\n        <div className={styles.tierIconContainer}>\n            <div\n                className={`${sizeClasses[size]} ${styles.tierIcon}`}\n                style={{\n                    backgroundColor: tierInfo.bgColor,\n                    color: tierInfo.color,\n                    border: `1px solid ${tierInfo.color}40`,\n                }}\n            >\n                {tierInfo.icon}\n            </div>\n            {showText && (\n                <span className={styles.tierIconText} style={{ color: tierInfo.color }}>\n          {tierInfo.name}\n        </span>\n            )}\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}