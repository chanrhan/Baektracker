{"ast":null,"code":"export const ObjectUtils = {\n  isEmpty: value => {\n    const result = value === null || value === undefined || value === '' || value.length === 0;\n    if (result) {\n      return true;\n    }\n    if (typeof value === 'object') {\n      return Object.keys(value).length === 0;\n    }\n    return false;\n  },\n  isEmptyArray: array => {\n    return !array || typeof array !== \"object\" || array.length === 0;\n  },\n  isEmptyMap(map) {\n    for (const key in map) {\n      if (!ObjectUtils.isEmpty(map[key])) {\n        return false;\n      }\n    }\n    return true;\n  },\n  convertBooleanArrayToString(arr) {\n    let str = '';\n    arr.map(value => {\n      str += value ? '1' : '0';\n    });\n    return str;\n  },\n  transposeArray: arr => arr.reduce((result, row) => row.map((_, i) => [...(result[i] || []), row[i]]), []),\n  toggleOf,\n  varToString\n};\nfunction toggleOf(arr, index) {\n  for (let i in arr) {\n    arr[i] = i == index;\n  }\n}\nfunction varToString(_var) {\n  return Object.keys(_var)[0];\n}","map":{"version":3,"names":["ObjectUtils","isEmpty","value","result","undefined","length","Object","keys","isEmptyArray","array","isEmptyMap","map","key","convertBooleanArrayToString","arr","str","transposeArray","reduce","row","_","i","toggleOf","varToString","index","_var"],"sources":["/Users/chan/Baektracker/src/main/frontend/src/js/setup/utils/ObjectUtil.js"],"sourcesContent":["\nexport const ObjectUtils = {\n    isEmpty: (value)=>{\n        const result = value === null || value === undefined || value === '' || value.length === 0;\n        if(result){\n            return true;\n        }\n        if(typeof value === 'object'){\n            return  Object.keys(value).length === 0;\n        }\n        return false;\n    },\n    isEmptyArray: (array)=>{\n        return !array || typeof array !== \"object\" || array.length === 0\n    },\n    isEmptyMap(map){\n        for(const key in map){\n            if(!ObjectUtils.isEmpty(map[key])){\n                return false;\n            }\n        }\n        return true;\n    },\n    convertBooleanArrayToString(arr){\n        let str = '';\n        arr.map((value)=>{\n            str += (value) ? '1' : '0';\n        })\n        return str;\n    },\n    transposeArray: (arr) => arr.reduce(\n        (result, row) => row.map((_, i) => [...(result[i] || []), row[i]]),\n        []\n    ),\n    toggleOf,\n    varToString,\n}\n\nfunction toggleOf(arr, index){\n    for(let i in arr){\n        arr[i] = (i == index);\n    }\n}\n\nfunction varToString(_var){\n    return Object.keys(_var)[0];\n}"],"mappings":"AACA,OAAO,MAAMA,WAAW,GAAG;EACvBC,OAAO,EAAGC,KAAK,IAAG;IACd,MAAMC,MAAM,GAAGD,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKE,SAAS,IAAIF,KAAK,KAAK,EAAE,IAAIA,KAAK,CAACG,MAAM,KAAK,CAAC;IAC1F,IAAGF,MAAM,EAAC;MACN,OAAO,IAAI;IACf;IACA,IAAG,OAAOD,KAAK,KAAK,QAAQ,EAAC;MACzB,OAAQI,MAAM,CAACC,IAAI,CAACL,KAAK,CAAC,CAACG,MAAM,KAAK,CAAC;IAC3C;IACA,OAAO,KAAK;EAChB,CAAC;EACDG,YAAY,EAAGC,KAAK,IAAG;IACnB,OAAO,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACJ,MAAM,KAAK,CAAC;EACpE,CAAC;EACDK,UAAUA,CAACC,GAAG,EAAC;IACX,KAAI,MAAMC,GAAG,IAAID,GAAG,EAAC;MACjB,IAAG,CAACX,WAAW,CAACC,OAAO,CAACU,GAAG,CAACC,GAAG,CAAC,CAAC,EAAC;QAC9B,OAAO,KAAK;MAChB;IACJ;IACA,OAAO,IAAI;EACf,CAAC;EACDC,2BAA2BA,CAACC,GAAG,EAAC;IAC5B,IAAIC,GAAG,GAAG,EAAE;IACZD,GAAG,CAACH,GAAG,CAAET,KAAK,IAAG;MACba,GAAG,IAAKb,KAAK,GAAI,GAAG,GAAG,GAAG;IAC9B,CAAC,CAAC;IACF,OAAOa,GAAG;EACd,CAAC;EACDC,cAAc,EAAGF,GAAG,IAAKA,GAAG,CAACG,MAAM,CAC/B,CAACd,MAAM,EAAEe,GAAG,KAAKA,GAAG,CAACP,GAAG,CAAC,CAACQ,CAAC,EAAEC,CAAC,KAAK,CAAC,IAAIjB,MAAM,CAACiB,CAAC,CAAC,IAAI,EAAE,CAAC,EAAEF,GAAG,CAACE,CAAC,CAAC,CAAC,CAAC,EAClE,EACJ,CAAC;EACDC,QAAQ;EACRC;AACJ,CAAC;AAED,SAASD,QAAQA,CAACP,GAAG,EAAES,KAAK,EAAC;EACzB,KAAI,IAAIH,CAAC,IAAIN,GAAG,EAAC;IACbA,GAAG,CAACM,CAAC,CAAC,GAAIA,CAAC,IAAIG,KAAM;EACzB;AACJ;AAEA,SAASD,WAAWA,CAACE,IAAI,EAAC;EACtB,OAAOlB,MAAM,CAACC,IAAI,CAACiB,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}