{"ast":null,"code":"var _s = $RefreshSig$();\nimport axiosInstance from \"./axiosInstance\";\nimport useModal from \"../hook/useModal\";\nimport { ModalType } from \"../modal/ModalType\";\n// import {authActions} from \"../store/slices/authSlice\";\n// import {useSelector} from \"react-redux\";\n\nexport const AxiosApi = () => {\n  _s();\n  const modal = useModal();\n  // const {authenticated, accessToken, expireTime} = useSelector(s=>s.authReducer);\n\n  axiosInstance.interceptors.response.use(response => {\n    return {\n      status: response.status,\n      data: response.data,\n      headers: response.headers\n    };\n  }, error => {\n    if (!error) {\n      return error.response;\n    }\n    const status = error.response.status;\n    if (status >= 300) {\n      var _msg;\n      let msg = \"문제가 발생했습니다. 다시 한번 시도해 주세요.\";\n      if (error.code === 'ERR_NETWORK') {\n        msg = '서버 연결이 원활하지 않습니다. 잠시 후 다시 시도해주세요.';\n      } else if (error.response && error.response.data) {\n        msg = error.response.data.message;\n      }\n      modal.openModal(ModalType.SNACKBAR.Warn, {\n        msg: (_msg = msg) !== null && _msg !== void 0 ? _msg : \"문제가 발생했습니다. 다시 한번 시도해 주세요.\"\n      });\n    }\n\n    // throw msg;\n    return {\n      status: status,\n      data: error.response.data\n    };\n  });\n  const post = async (url, data, option) => {\n    return await axiosInstance.post(url, data, option);\n  };\n  const get = async (url, option) => {\n    return await axiosInstance.get(url, option);\n  };\n  const del = async (url, option) => {\n    return await axiosInstance.delete(url, option);\n  };\n  const put = async (url, data, option) => {\n    return await axiosInstance.put(url, data, option);\n  };\n  return {\n    post,\n    get,\n    del,\n    put\n  };\n};\n_s(AxiosApi, \"hDyDP9waVoSwitriRQZZW/zZCNw=\", false, function () {\n  return [useModal];\n});\n_c = AxiosApi;\nexport const AxiosApiWithAccessToken = () => {\n  const axiosApi = AxiosApi();\n  const post = async (url, data, accessToken) => {\n    return axiosApi.post(url, data, {\n      headers: {\n        \"X-ACCESS-TOKEN\": accessToken\n      }\n    });\n  };\n  const get = (url, accessToken) => {\n    return axiosApi.get(url, {\n      headers: {\n        \"X-ACCESS-TOKEN\": accessToken\n      }\n    });\n  };\n  const del = async (url, accessToken, data) => {\n    return axiosApi.delete(url, {\n      data: data,\n      headers: {\n        \"X-ACCESS-TOKEN\": accessToken\n      }\n    });\n  };\n  const put = async (url, data, accessToken) => {\n    return axiosApi.put(url, data, {\n      headers: {\n        \"X-ACCESS-TOKEN\": accessToken\n      }\n    });\n  };\n  return {\n    post,\n    get,\n    del,\n    put\n  };\n};\n_c2 = AxiosApiWithAccessToken;\nvar _c, _c2;\n$RefreshReg$(_c, \"AxiosApi\");\n$RefreshReg$(_c2, \"AxiosApiWithAccessToken\");","map":{"version":3,"names":["axiosInstance","useModal","ModalType","AxiosApi","_s","modal","interceptors","response","use","status","data","headers","error","_msg","msg","code","message","openModal","SNACKBAR","Warn","post","url","option","get","del","delete","put","_c","AxiosApiWithAccessToken","axiosApi","accessToken","_c2","$RefreshReg$"],"sources":["/Users/chan/Baektracker/src/main/frontend/src/js/setup/api/ApiCommon.js"],"sourcesContent":["import axiosInstance from \"./axiosInstance\";\nimport useModal from \"../hook/useModal\";\nimport {ModalType} from \"../modal/ModalType\";\n// import {authActions} from \"../store/slices/authSlice\";\n// import {useSelector} from \"react-redux\";\n\nexport const AxiosApi = ()=> {\n    const modal = useModal();\n    // const {authenticated, accessToken, expireTime} = useSelector(s=>s.authReducer);\n\n    axiosInstance.interceptors.response.use((response)=>{\n        return {\n            status: response.status,\n            data: response.data,\n            headers: response.headers\n        }\n    }, (error)=>{\n        if(!error){\n            return error.response;\n        }\n        const status = error.response.status;\n        if(status >= 300){\n            let msg = \"문제가 발생했습니다. 다시 한번 시도해 주세요.\";\n            if(error.code === 'ERR_NETWORK'){\n                msg =  '서버 연결이 원활하지 않습니다. 잠시 후 다시 시도해주세요.'\n            }else if(error.response && error.response.data){\n                msg = error.response.data.message;\n            }\n            modal.openModal(ModalType.SNACKBAR.Warn, {\n                msg: msg ?? \"문제가 발생했습니다. 다시 한번 시도해 주세요.\"\n            })\n        }\n\n        // throw msg;\n        return  {\n            status: status,\n            data: error.response.data\n        }\n    })\n\n    const post = async(url, data, option)=>{\n        return await axiosInstance.post(url, data, option);\n    }\n\n    const get = async(url, option)=>{\n        return await axiosInstance.get(url, option)\n    }\n\n    const del = async(url, option)=>{\n        return await axiosInstance.delete(url, option);\n    }\n\n    const put = async (url, data, option)=>{\n        return await axiosInstance.put(url, data, option);\n    }\n\n    return {\n        post,\n        get,\n        del,\n        put\n    }\n}\n\nexport const AxiosApiWithAccessToken = ()=> {\n    const axiosApi = AxiosApi();\n\n    const post = async(url, data, accessToken)=>{\n        return axiosApi.post(url,data, {\n            headers: {\n                \"X-ACCESS-TOKEN\": accessToken\n            }\n        });\n    }\n\n\n    const get=(url, accessToken)=>{\n        return axiosApi.get(url, {\n            headers: {\n                \"X-ACCESS-TOKEN\": accessToken\n            }\n        });\n    }\n\n    const del = async(url, accessToken, data)=>{\n        return axiosApi.delete(url, {\n            data: data,\n            headers: {\n                \"X-ACCESS-TOKEN\": accessToken\n            }\n        });\n    }\n\n    const put = async (url, data, accessToken) => {\n        return axiosApi.put(url, data, {\n            headers: {\n                \"X-ACCESS-TOKEN\": accessToken\n            }\n        });\n    }\n\n    return {\n        post,\n        get,\n        del,\n        put,\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}