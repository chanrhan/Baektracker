{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Baektracker/src/main/frontend/src/js/modal/LayerModal.js\",\n  _s = $RefreshSig$();\nimport Popup from \"../../css/popup.module.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { cm } from \"../setup/utils/cm\";\nimport { ScrollUtils } from \"../utils/ScrollUtils\";\n\n/*\nUsage\nex) <LayerModal {...props} maxWidth={1045} top={45}>\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LayerModal = ({\n  modalRef,\n  scrollable,\n  children,\n  top,\n  left,\n  width,\n  backgroundColor,\n  height,\n  windowBlocked,\n  minWidth,\n  maxWidth,\n  minHeight,\n  maxHeight,\n  paddingBottom\n}) => {\n  _s();\n  const [fadeIn, setFadeIn] = useState(false);\n  const scrollRef = useRef(null);\n  useEffect(() => {\n    let prevScrollY = null;\n    if (!scrollable) {\n      prevScrollY = ScrollUtils.preventScroll(scrollRef.current.body);\n    }\n    const timer = setTimeout(() => {\n      setFadeIn(true);\n    }, 100);\n    return () => {\n      if (prevScrollY) {\n        ScrollUtils.allowScroll(scrollRef.current.body, prevScrollY);\n      }\n      prevScrollY = null;\n      clearTimeout(timer);\n    };\n  }, []);\n  useEffect(() => {\n    let prevScrollY = null;\n    if (windowBlocked) {\n      prevScrollY = ScrollUtils.preventScroll(document.body);\n    }\n    return () => {\n      ScrollUtils.allowScroll(document.body, prevScrollY);\n    };\n  }, []);\n\n  // const clickAwayToClose = (e)=>{\n  //     if(contentRef.current && !contentRef.current.contains(e.target)){\n  //         close();\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `scroll-hidden ${cm(Popup.popup_mask, `${fadeIn && Popup.active}`)}`,\n      ref: scrollRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Popup.popup,\n        ref: modalRef,\n        style: {\n          top: `${60 + top}px`,\n          left: `${left}px`,\n          width: `${width}px`,\n          height: `${height}px`,\n          minWidth: `${minWidth}px`,\n          maxWidth: `${maxWidth}px`,\n          minHeight: `${minHeight}px`,\n          maxHeight: `${maxHeight}px`,\n          paddingBottom: `${paddingBottom}px`,\n          backgroundColor: backgroundColor\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(LayerModal, \"Cz5V9JcNdJmL+EpRRUKM6fj9iq8=\");\n_c = LayerModal;\nvar _c;\n$RefreshReg$(_c, \"LayerModal\");","map":{"version":3,"names":["Popup","useEffect","useRef","useState","cm","ScrollUtils","jsxDEV","_jsxDEV","Fragment","_Fragment","LayerModal","modalRef","scrollable","children","top","left","width","backgroundColor","height","windowBlocked","minWidth","maxWidth","minHeight","maxHeight","paddingBottom","_s","fadeIn","setFadeIn","scrollRef","prevScrollY","preventScroll","current","body","timer","setTimeout","allowScroll","clearTimeout","document","className","popup_mask","active","ref","popup","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chan/Baektracker/src/main/frontend/src/js/modal/LayerModal.js"],"sourcesContent":["import Popup from \"../../css/popup.module.css\"\nimport {useEffect, useRef, useState} from \"react\";\nimport {cm} from \"../setup/utils/cm\";\nimport {ScrollUtils} from \"../utils/ScrollUtils\";\n\n/*\nUsage\nex) <LayerModal {...props} maxWidth={1045} top={45}>\n */\nexport const LayerModal = ({modalRef, scrollable, children, top, left, width, backgroundColor,\n                               height, windowBlocked, minWidth, maxWidth, minHeight, maxHeight, paddingBottom}) => {\n    const [fadeIn, setFadeIn] = useState(false);\n\n    const scrollRef = useRef(null)\n\n    useEffect(() => {\n        let prevScrollY = null;\n        if(!scrollable){\n            prevScrollY = ScrollUtils.preventScroll(scrollRef.current.body);\n        }\n        const timer = setTimeout(() => {\n            setFadeIn(true)\n        }, 100)\n\n        return () => {\n            if(prevScrollY){\n                ScrollUtils.allowScroll(scrollRef.current.body, prevScrollY)\n            }\n            prevScrollY = null;\n            clearTimeout(timer);\n        }\n    }, []);\n\n\n    useEffect(() => {\n        let prevScrollY = null;\n        if(windowBlocked){\n            prevScrollY = ScrollUtils.preventScroll(document.body);\n        }\n        return ()=>{\n            ScrollUtils.allowScroll(document.body, prevScrollY)\n        }\n    }, []);\n\n    // const clickAwayToClose = (e)=>{\n    //     if(contentRef.current && !contentRef.current.contains(e.target)){\n    //         close();\n    //     }\n    // }\n\n\n    return (\n        <>\n            <div className={`scroll-hidden ${cm(Popup.popup_mask, `${fadeIn && Popup.active}`)}`} ref={scrollRef}>\n                <div className={Popup.popup} ref={modalRef} style={\n                    {\n                        top: `${60 + top}px`,\n                        left: `${left}px`,\n                        width: `${width}px`,\n                        height: `${height}px`,\n                        minWidth: `${minWidth}px`,\n                        maxWidth: `${maxWidth}px`,\n                        minHeight: `${minHeight}px`,\n                        maxHeight: `${maxHeight}px`,\n                        paddingBottom: `${paddingBottom}px`,\n                        backgroundColor: backgroundColor\n                    }\n                }>\n                    {children}\n                </div>\n            </div>\n        </>\n\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}